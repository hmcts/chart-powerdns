---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "pdns.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "pdns.fullname" . }}
    helm.sh/chart: {{ template "pdns.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "pdns.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "pdns.fullname" . }}
        release: {{ .Release.Name }}
    spec:
    {{- if not .Values.postgresql.enabled }}
      volumes:
        - name: pdns-secrets
          flexVolume:
            driver: "azure/kv"
            secretRef:
              name: kvcreds
            options:
              usepodidentity: "false"
              keyvaultname: {{ .Values.keyVault.vaultName}}
              keyvaultobjectnames: {{ .Values.keyVault.secrets.dbUsernameSecret }};{{ .Values.keyVault.secrets.dbPasswordSecret }};{{ .Values.keyVault.secrets.pdnsApiKeySecret }}
              keyvaultobjecttypes: secret;secret;secret
              resourcegroup: {{ .Values.keyVault.resourceGroup }}
              subscriptionid: {{ .Values.keyVault.subscriptionId }}
              tenantid: {{ .Values.keyVault.tenantId }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if not .Values.postgresql.enabled }}
          volumeMounts:
          - name: pdns-secrets
            mountPath: /secrets
            readOnly: true
          command: ["/bin/sh", "-c", "export PGSQL_USER=$(cat /secrets/{{ .Values.keyVault.secrets.dbUsernameSecret }}); \
                     export PGSQL_PASS=$(cat /secrets/{{ .Values.keyVault.secrets.dbPasswordSecret }}); \
                     export PDNS_API_KEY=$(cat /secrets/{{ .Values.keyVault.secrets.pdnsApiKeySecret }}); \
                     /bin/powerdns"]
        {{- end }}
          env:
{{- (include "pdns.environment" .Values.environment) | indent 10 }}
          ports:
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: api
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: api
          readinessProbe:
            httpGet:
              path: /
              port: api
          resources:
{{ toYaml .Values.resources | indent 12 }}
